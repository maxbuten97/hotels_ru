"use strict";
/*
Вычислить сумму чисел до данного
Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.

Например:

sumTo(1) = 1
sumTo(2) = 2 + 1 = 3
sumTo(3) = 3 + 2 + 1 = 6
sumTo(4) = 4 + 3 + 2 + 1 = 10
...
sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050
Сделайте три варианта решения:

С использованием цикла.
Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
С использованием формулы арифметической прогрессии.
Пример работы вашей функции:

function sumTo(n) { /*... ваш код ...  }

alert( sumTo(100) ); // 5050
P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?

P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)? */
//Решение

//Цикл
/*
let sumTo = (n) => {
    let result = 0;
  for (let i = 1; i <= n; i++) {
    result += i;
  }
  return result
};
console.log(sumTo(100))

//Рекурсия
let sumTo = (n) => {
  return n == 1 ? n : n + sumTo(n - 1);
};

console.log(sumTo(100));

//Арифметичкая прогрессия

let sumTo = (n) => {
  return (n * (n + 1)) / 2;
};

console.log(sumTo(100)); 

P.S. Быстрее сработает функция с прогрессией, она использует лишь 3 операции для n
P.P.S. Скорее будет ошибка, тк 100000 превышает размер стека */
